	.section	.rodata
.int_wformat: .string "%d\n"
.str_wformat: .string "%s\n"
.int_rformat: .string "%d"
	.comm _gp, 76, 4
	.text
	.globl main
	.type main, @function
main:		nop
	pushq %rbp
	movq %rsp, %rbp
	movl $0, %ebx
	movl $32, %ebx
	movq $_gp, %rcx
	addq $0, %rcx
	movl %ebx, (%rcx)
	movl $1, %ebx
	movl $11, %ebx
	movq $_gp, %rcx
	addq $4, %rcx
	movl %ebx, (%rcx)
	movl $2, %ebx
	movl $111, %ebx
	movq $_gp, %rcx
	addq $8, %rcx
	movl %ebx, (%rcx)
	movl $3, %ebx
	movl $88, %ebx
	movq $_gp, %rcx
	addq $12, %rcx
	movl %ebx, (%rcx)
	movl $4, %ebx
	movl $11, %ebx
	movq $_gp, %rcx
	addq $16, %rcx
	movl %ebx, (%rcx)
	movl $5, %ebx
	movl $44, %ebx
	movq $_gp, %rcx
	addq $20, %rcx
	movl %ebx, (%rcx)
	movl $6, %ebx
	movl $33, %ebx
	movq $_gp, %rcx
	addq $24, %rcx
	movl %ebx, (%rcx)
	movl $7, %ebx
	movl $33, %ebx
	movq $_gp, %rcx
	addq $28, %rcx
	movl %ebx, (%rcx)
	movl $8, %ebx
	movl $22, %ebx
	movq $_gp, %rcx
	addq $32, %rcx
	movl %ebx, (%rcx)
	movl $9, %ebx
	movl $77, %ebx
	movq $_gp, %rcx
	addq $36, %rcx
	movl %ebx, (%rcx)
	movl $10, %ebx
	movl $45, %ebx
	movq $_gp, %rcx
	addq $40, %rcx
	movl %ebx, (%rcx)
	movl $11, %ebx
	movl $65, %ebx
	movq $_gp, %rcx
	addq $44, %rcx
	movl %ebx, (%rcx)
	movl $12, %ebx
	movl $76, %ebx
	movq $_gp, %rcx
	addq $48, %rcx
	movl %ebx, (%rcx)
	movl $13, %ebx
	movl $87, %ebx
	movq $_gp, %rcx
	addq $52, %rcx
	movl %ebx, (%rcx)
	movl $14, %ebx
	movl $34, %ebx
	movq $_gp, %rcx
	addq $56, %rcx
	movl %ebx, (%rcx)
	movl $0, %ebx
	movq $_gp, %rcx
	addq $60, %rcx
	movl %ebx, (%rcx)
	jmp .L1
.L1:	movq $_gp, %rcx
	addq $60, %rcx
	movl (%rcx), %r8d
	movl $14, %ebx
	cmpl %ebx, %r8d
	movl $0, %r8d
	movl $1, %ebx
	cmovl %ebx, %r8d
	movl $-1, %ebx
	testl %ebx, %r8d
	je .L2
	movq $_gp, %rcx
	addq $60, %rcx
	movl (%rcx), %r8d
	movl %r8d, %ebx
	movq $_gp, %rcx
	addq $72, %rcx
	movl %ebx, (%rcx)
	movq $_gp, %rcx
	addq $60, %rcx
	movl (%rcx), %r8d
	movl $1, %ebx
	addl %ebx, %r8d
	movl %r8d, %ebx
	movq $_gp, %rcx
	addq $64, %rcx
	movl %ebx, (%rcx)
	jmp .L3
.L3:	movq $_gp, %rcx
	addq $64, %rcx
	movl (%rcx), %r8d
	movl $15, %ebx
	cmpl %ebx, %r8d
	movl $0, %r8d
	movl $1, %ebx
	cmovl %ebx, %r8d
	movl $-1, %ebx
	testl %ebx, %r8d
	je .L4
	movq $_gp, %rcx
	addq $64, %rcx
	movl (%rcx), %r8d
	movl %r8d, %r14d
	movslq %r14d, %r14
	imulq $4, %r14
	addq $0, %r14
	movq $_gp, %rcx
	addq %r14, %rcx
	movl (%rcx), %r9d
	movq $_gp, %rcx
	addq $72, %rcx
	movl (%rcx), %r8d
	movl %r8d, %r14d
	movslq %r14d, %r14
	imulq $4, %r14
	addq $0, %r14
	movq $_gp, %rcx
	addq %r14, %rcx
	movl (%rcx), %r10d
	cmpl %r10d, %r9d
	movl $0, %r9d
	movl $1, %r10d
	cmovl %r10d, %r9d
	movl $-1, %ebx
	testl %ebx, %r9d
	je .L6
	movq $_gp, %rcx
	addq $64, %rcx
	movl (%rcx), %r8d
	movl %r8d, %ebx
	movq $_gp, %rcx
	addq $72, %rcx
	movl %ebx, (%rcx)
	jmp .L6
.L6:	movq $_gp, %rcx
	addq $64, %rcx
	movl (%rcx), %r8d
	movl $1, %ebx
	addl %ebx, %r8d
	movl %r8d, %ebx
	movq $_gp, %rcx
	addq $64, %rcx
	movl %ebx, (%rcx)
	jmp .L3
.L4:	movq $_gp, %rcx
	addq $60, %rcx
	movl (%rcx), %r8d
	movl %r8d, %r14d
	movslq %r14d, %r14
	imulq $4, %r14
	addq $0, %r14
	movq $_gp, %rcx
	addq %r14, %rcx
	movl (%rcx), %r9d
	movl %r9d, %ebx
	movq $_gp, %rcx
	addq $68, %rcx
	movl %ebx, (%rcx)
	movq $_gp, %rcx
	addq $60, %rcx
	movl (%rcx), %r8d
	movq $_gp, %rcx
	addq $72, %rcx
	movl (%rcx), %r9d
	movl %r9d, %r14d
	movslq %r14d, %r14
	imulq $4, %r14
	addq $0, %r14
	movq $_gp, %rcx
	addq %r14, %rcx
	movl (%rcx), %r10d
	movl %r10d, %ebx
	movl %r8d, %r14d
	movslq %r14d, %r14
	imulq $4, %r14
	addq $0, %r14
	movq $_gp, %rcx
	addq %r14, %rcx
	movl %ebx, (%rcx)
	movq $_gp, %rcx
	addq $72, %rcx
	movl (%rcx), %r8d
	movq $_gp, %rcx
	addq $68, %rcx
	movl (%rcx), %r9d
	movl %r9d, %ebx
	movl %r8d, %r14d
	movslq %r14d, %r14
	imulq $4, %r14
	addq $0, %r14
	movq $_gp, %rcx
	addq %r14, %rcx
	movl %ebx, (%rcx)
	movq $_gp, %rcx
	addq $60, %rcx
	movl (%rcx), %r8d
	movl $1, %ebx
	addl %ebx, %r8d
	movl %r8d, %ebx
	movq $_gp, %rcx
	addq $60, %rcx
	movl %ebx, (%rcx)
	jmp .L1
.L2:	movl $0, %ebx
	movq $_gp, %rcx
	addq $60, %rcx
	movl %ebx, (%rcx)
	jmp .L9
.L9:	movq $_gp, %rcx
	addq $60, %rcx
	movl (%rcx), %r8d
	movl $15, %ebx
	cmpl %ebx, %r8d
	movl $0, %r8d
	movl $1, %ebx
	cmovl %ebx, %r8d
	movl $-1, %ebx
	testl %ebx, %r8d
	je .L10
	movq $_gp, %rcx
	addq $60, %rcx
	movl (%rcx), %r8d
	movl %r8d, %r14d
	movslq %r14d, %r14
	imulq $4, %r14
	addq $0, %r14
	movq $_gp, %rcx
	addq %r14, %rcx
	movl (%rcx), %r9d
	movl %r9d, %ebx
	movl %ebx, %esi
	movl $0, %eax
	movl $.int_wformat, %edi
	call printf
	movq $_gp, %rcx
	addq $60, %rcx
	movl (%rcx), %r8d
	movl $1, %ebx
	addl %ebx, %r8d
	movl %r8d, %ebx
	movq $_gp, %rcx
	addq $60, %rcx
	movl %ebx, (%rcx)
	jmp .L9
.L10:	leave
	ret
